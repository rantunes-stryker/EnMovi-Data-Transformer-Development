{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "EnMovi-Data-Transformer-Development"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy list of patients from telemetry to lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get patient list",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT PatientId FROM dbo.PatientsIdForDataLake;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "PatientsIdForDataLake",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy to DS lake",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get patient list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get patient list').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Patient data to DS lake",
									"description": "Copy patient OIQ data to data science lake",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "00:10:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "orchestrators/CopyPatientTelemetryPipelineToDataLake_orchestrator",
										"method": "POST",
										"body": {
											"value": "@item()",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "Data_Factory_Azure_Functions",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Wait until finish",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait a few seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "00:10:00",
										"retry": 10,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Patient data to DS lake').output.statusQueryGetUri",
											"type": "Expression"
										},
										"method": "GET",
										"linkedServices": [
											{
												"referenceName": "OrthologIQ to data science noPHI",
												"type": "LinkedServiceReference"
											}
										]
									}
								},
								{
									"name": "Wait a few seconds",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Patient data to DS lake",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							]
						}
					}
				],
				"concurrency": 1,
				"variables": {
					"X": {
						"type": "Array"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-05-18T17:25:21Z"
			},
			"dependsOn": []
		}
	]
}